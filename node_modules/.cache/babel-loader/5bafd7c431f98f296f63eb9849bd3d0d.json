{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain Projects\\\\Auction-DApp\\\\src\\\\Components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Auction from '../contracts/Auction.json';\nimport NavBar from \"./NavBar.js\";\nimport Main from \"./Main\";\n\nclass App extends Component {\n  async UNSAFE_componentWillMount() {\n    await this.LoadWeb3();\n    await this.LoadBLockChain();\n  }\n\n  async LoadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('No MetaMask or anyother connection Detected');\n    }\n  }\n\n  async LoadBLockChain() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts();\n    this.setState({\n      account: account[0]\n    });\n    console.log(account); //Ganache Network ID\n\n    const networkID = await web3.eth.net.getId(); //Load Contract\n\n    const ContractData = Auction.networks[networkID];\n\n    if (ContractData) {\n      const cont = new web3.eth.Contract(Auction.abi, ContractData.address);\n      this.setState({\n        auction: cont\n      });\n      const owner_addr = await cont.methods.GetOwner().call();\n      this.setState({\n        auction_owner: owner_addr\n      });\n      console.log(\"Onwer Address: \", this.state.auction_owner);\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  StartTimer() {\n    setInterval(this.CountDown, 1000);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.PlaceBid = async amount => {\n      let status = await this.state.auction.methods.StartAuction().call();\n\n      if (status) {\n        this.setState({\n          loading: true\n        });\n        let curr = await this.CurrentBid();\n        curr[1] = window.web3.utils.toWei(curr[1], 'Ether');\n        console.log(\"Current: \", curr[1], \"Placed: \", amount);\n\n        if (amount > curr[1]) {\n          await this.state.auction.methods.BidNow(amount).send({\n            from: this.state.account\n          }).on('transactionHash', hash => {\n            this.setState({\n              loading: false\n            });\n          });\n        } else {\n          window.alert(\"Invalid Amount\");\n          this.setState({\n            loading: false\n          });\n        }\n      } else {\n        window.alert(\"Auction not started yet\");\n      }\n    };\n\n    this.PreviousBid = async () => {\n      let prev = await this.state.auction.methods.GetPrevBid().call();\n      let aa = window.web3.utils.fromWei(prev[1], 'ether');\n      prev[1] = aa;\n      return prev;\n    };\n\n    this.CurrentBid = async () => {\n      let curr = await this.state.auction.methods.GetHighestBid().call();\n      let aa = window.web3.utils.fromWei(curr[1], 'ether');\n      curr[1] = aa;\n      return curr;\n    };\n\n    this.StartAuction = async addr => {\n      if (addr != this.state.auction_owner) {\n        window.alert('Auction Can Only be started by the Owner');\n      } else {\n        await this.state.auction.methods.StartAuction().call();\n        this.StartTimer();\n      }\n    };\n\n    this.CountDown = async () => {\n      //await this.state.auction.methods.DecrementTimer().call()\n      //let timeLeft = await this.state.auction.methods.GetTimer().call()\n      let time;\n      this.setState({\n        timer: timeLeft\n      });\n      console.log(\"Timer: \", this.state.timer);\n    };\n\n    this.state = {\n      auction_owner: '0x0',\n      account: '0x00001',\n      auction: {},\n      loading: true,\n      timer: 30\n    };\n  }\n\n  render() {\n    let content;\n    {\n      this.state.loading ? content = React.createElement(\"p\", {\n        id: \"loader\",\n        className: \"text-center\",\n        style: {\n          marginTop: '100px',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Loading Contracts...\")) : content = React.createElement(Main, {\n        PlaceBid: this.PlaceBid,\n        PreviousBid: this.PreviousBid,\n        CurrentBid: this.CurrentBid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      account: this.state.account,\n      owner: this.state.auction_owner,\n      StartAuction: this.StartAuction,\n      timer: this.state.timer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), content, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/BlockChain Projects/Auction-DApp/src/Components/App.js"],"names":["React","Component","Web3","Auction","NavBar","Main","App","UNSAFE_componentWillMount","LoadWeb3","LoadBLockChain","window","ethereum","web3","enable","currentProvider","alert","account","eth","getAccounts","setState","console","log","networkID","net","getId","ContractData","networks","cont","Contract","abi","address","auction","owner_addr","methods","GetOwner","call","auction_owner","state","loading","StartTimer","setInterval","CountDown","constructor","props","PlaceBid","amount","status","StartAuction","curr","CurrentBid","utils","toWei","BidNow","send","from","on","hash","PreviousBid","prev","GetPrevBid","aa","fromWei","GetHighestBid","addr","time","timer","timeLeft","render","content","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Auction from '../contracts/Auction.json'\nimport NavBar from \"./NavBar.js\";\nimport Main from \"./Main\";\n\n\nclass App extends Component {\n\n  async UNSAFE_componentWillMount(){\n    await this.LoadWeb3()\n    await this.LoadBLockChain()\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    { \n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3( window.web3.currentProvider)\n    }\n    else{\n      window.alert('No MetaMask or anyother connection Detected')\n    }\n\n  }\n  async LoadBLockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts()\n    this.setState({account:account[0]})\n    console.log(account)\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId()\n\n    //Load Contract\n    const ContractData = Auction.networks[networkID]\n    if(ContractData){\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address)\n      this.setState({auction:cont})  \n\n      const owner_addr = await cont.methods.GetOwner().call()\n      this.setState({auction_owner:owner_addr})\n      console.log(\"Onwer Address: \", this.state.auction_owner)\n      \n    }\n    this.setState({loading:false})\n\n\n  }\n  \n  PlaceBid = async (amount) =>{\n    let status = await this.state.auction.methods.StartAuction().call()\n    if(status)\n    {\n    this.setState({loading:true})\n    let curr = await this.CurrentBid();\n    curr[1] = window.web3.utils.toWei(curr[1],'Ether')\n    console.log(\"Current: \" , curr[1] , \"Placed: \",amount)\n      if(amount > curr[1]){\n        \n      \n      await this.state.auction.methods.BidNow(amount).send({from:this.state.account}).on('transactionHash',(hash)=>{\n        this.setState({loading:false})\n        \n      })\n    }\n    else{\n      window.alert(\"Invalid Amount\")\n      this.setState({loading:false})\n    }\n  }\n  else{\n    window.alert(\"Auction not started yet\")\n  }\n    \n  }\n\n  PreviousBid = async() =>{\n\n       let prev = await this.state.auction.methods.GetPrevBid().call()\n       let aa = window.web3.utils.fromWei(prev[1],'ether')\n       prev[1] = aa\n       return prev;\n  }\n\n  CurrentBid = async() =>{\n\n   let curr = await this.state.auction.methods.GetHighestBid().call()\n   let aa = window.web3.utils.fromWei(curr[1],'ether')\n   curr[1] = aa\n   return curr;\n\n}\n  StartAuction = async(addr) =>{\n    if(addr != this.state.auction_owner){\n      window.alert('Auction Can Only be started by the Owner')\n      \n    }\n    else{\n      await this.state.auction.methods.StartAuction().call()\n      this.StartTimer()\n    }\n\n  }\n  StartTimer(){\n    setInterval(this.CountDown,1000)\n  }\n  CountDown = async()=>{\n      //await this.state.auction.methods.DecrementTimer().call()\n      //let timeLeft = await this.state.auction.methods.GetTimer().call()\n      let time\n      this.setState({timer:timeLeft})\n      console.log(\"Timer: \" , this.state.timer)\n    }\n  constructor(props){\n    super(props)\n      this.state={\n        auction_owner:'0x0',\n        account:'0x00001',\n        auction:{},\n        loading:true,\n        timer: 30\n      }\n    \n  }\n  \n  render(){\n    let content\n    {this.state.loading? content = <p id='loader' className='text-center' style={{marginTop:'100px',color:'red'}}><strong>Loading Contracts...</strong></p>\n    :\n    content = <Main\n    PlaceBid = {this.PlaceBid}\n    PreviousBid = {this.PreviousBid}\n    CurrentBid = {this.CurrentBid}\n    />\n    }\n    return(\n      <div>\n         \n      <div>\n      <NavBar account = {this.state.account} owner ={this.state.auction_owner} StartAuction = {this.StartAuction} timer ={this.state.timer}/>\n      </div>\n    \n      {content}\n      <div>\n     \n      </div>\n      \n      </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}