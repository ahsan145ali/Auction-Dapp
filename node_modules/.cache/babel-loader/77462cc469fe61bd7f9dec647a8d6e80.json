{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain Projects\\\\Auction-DApp\\\\src\\\\Components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Auction from '../contracts/Auction.json';\nimport NavBar from \"./NavBar.js\";\nimport Main from \"./Main\";\n\nclass App extends Component {\n  async UNSAFE_componentWillMount() {\n    await this.LoadWeb3();\n    await this.LoadBLockChain();\n  }\n\n  async LoadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('No MetaMask or anyother connection Detected');\n    }\n  }\n\n  async LoadBLockChain() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts();\n    this.setState({\n      account: account[0]\n    });\n    console.log(account); //Ganache Network ID\n\n    const networkID = await web3.eth.net.getId(); //Load Contract\n\n    const ContractData = Auction.networks[networkID];\n\n    if (ContractData) {\n      const cont = new web3.eth.Contract(Auction.abi, ContractData.address);\n      this.setState({\n        auction: cont\n      });\n      const owner_addr = await cont.methods.GetOwner().call();\n      this.setState({\n        auction_owner: owner_addr\n      });\n      console.log(\"Onwer Address: \", owner_addr);\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.ApproveBid = async amount => {\n      let curr = await this.CurrentBid();\n      amount = window.web3.utils.fromWei(amount, 'ether');\n\n      if (amount < curr[1]) {\n        window.alert('Bid not placed! Amount less then Highest Bid');\n        this.setState({\n          loading: false\n        });\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.PlaceBid = async amount => {\n      this.setState({\n        loading: true\n      });\n      this.ApproveBid(amount);\n\n      if (this.ApproveBid(amount)) {\n        await this.state.auction.methods.BidNow(amount).send({\n          from: this.state.account\n        }).on('transactionHash', hash => {\n          this.setState({\n            loading: false\n          });\n        });\n      }\n    };\n\n    this.PreviousBid = async () => {\n      let prev = await this.state.auction.methods.GetPrevBid().call();\n      let aa = window.web3.utils.fromWei(prev[1], 'ether');\n      prev[1] = aa;\n      return prev;\n    };\n\n    this.CurrentBid = async () => {\n      let curr = await this.state.auction.methods.GetHighestBid().call();\n      let aa = window.web3.utils.fromWei(curr[1], 'ether');\n      curr[1] = aa;\n      return curr;\n    };\n\n    this.state = {\n      auction_owner: '0x0',\n      account: '0x00001',\n      auction: {},\n      loading: true\n    };\n  }\n\n  render() {\n    let content;\n    {\n      this.state.loading ? content = React.createElement(\"p\", {\n        id: \"loader\",\n        className: \"text-center\",\n        style: {\n          marginTop: '100px',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Loading Contracts...\")) : content = React.createElement(Main, {\n        PlaceBid: this.PlaceBid,\n        PreviousBid: this.PreviousBid,\n        CurrentBid: this.CurrentBid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      account: this.state.account,\n      owner: this.state.auction_owner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), content, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/BlockChain Projects/Auction-DApp/src/Components/App.js"],"names":["React","Component","Web3","Auction","NavBar","Main","App","UNSAFE_componentWillMount","LoadWeb3","LoadBLockChain","window","ethereum","web3","enable","currentProvider","alert","account","eth","getAccounts","setState","console","log","networkID","net","getId","ContractData","networks","cont","Contract","abi","address","auction","owner_addr","methods","GetOwner","call","auction_owner","loading","constructor","props","ApproveBid","amount","curr","CurrentBid","utils","fromWei","PlaceBid","state","BidNow","send","from","on","hash","PreviousBid","prev","GetPrevBid","aa","GetHighestBid","render","content","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Auction from '../contracts/Auction.json'\nimport NavBar from \"./NavBar.js\";\nimport Main from \"./Main\";\n\n\nclass App extends Component {\n\n  async UNSAFE_componentWillMount(){\n    await this.LoadWeb3()\n    await this.LoadBLockChain()\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    { \n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3( window.web3.currentProvider)\n    }\n    else{\n      window.alert('No MetaMask or anyother connection Detected')\n    }\n\n  }\n  async LoadBLockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts()\n    this.setState({account:account[0]})\n    console.log(account)\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId()\n\n    //Load Contract\n    const ContractData = Auction.networks[networkID]\n    if(ContractData){\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address)\n      this.setState({auction:cont})  \n\n      const owner_addr = await cont.methods.GetOwner().call()\n      this.setState({auction_owner:owner_addr})\n      console.log(\"Onwer Address: \", owner_addr)\n      \n    }\n    this.setState({loading:false})\n\n\n  }\n  ApproveBid =  async (amount) =>{\n\n    let curr = await this.CurrentBid()\n    amount = window.web3.utils.fromWei(amount,'ether')\n    if(amount < curr[1]){\n      window.alert('Bid not placed! Amount less then Highest Bid')\n      this.setState({loading:false})\n      return false;\n    }else{\n      return true;\n    }\n  }\n  PlaceBid = async (amount) =>{\n    this.setState({loading:true})\n    this.ApproveBid(amount)\n    if(this.ApproveBid(amount)){\n \n      await this.state.auction.methods.BidNow(amount).send({from:this.state.account}).on('transactionHash',(hash)=>{\n        this.setState({loading:false})\n        \n      })\n    }\n  }\n\n  PreviousBid = async() =>{\n\n       let prev = await this.state.auction.methods.GetPrevBid().call()\n       let aa = window.web3.utils.fromWei(prev[1],'ether')\n       prev[1] = aa\n       return prev;\n  }\n\n  CurrentBid = async() =>{\n\n   let curr = await this.state.auction.methods.GetHighestBid().call()\n   let aa = window.web3.utils.fromWei(curr[1],'ether')\n   curr[1] = aa\n   return curr;\n\n}\n  constructor(props){\n    super(props)\n      this.state={\n        auction_owner:'0x0',\n        account:'0x00001',\n        auction:{},\n        loading:true\n      }\n    \n  }\n  \n  render(){\n    let content\n    {this.state.loading? content = <p id='loader' className='text-center' style={{marginTop:'100px',color:'red'}}><strong>Loading Contracts...</strong></p>\n    :\n    content = <Main\n    PlaceBid = {this.PlaceBid}\n    PreviousBid = {this.PreviousBid}\n    CurrentBid = {this.CurrentBid}\n\n    />\n    }\n    return(\n      <div>\n        \n      <div>\n      <NavBar account = {this.state.account} owner ={this.state.auction_owner} />\n      </div>\n      {content}\n      <div>\n     \n      </div>\n      \n      </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}